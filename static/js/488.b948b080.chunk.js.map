{"version":3,"file":"static/js/488.b948b080.chunk.js","mappings":"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","sources":["components/login.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport UserAPI from \"../API/UserAPI.jsx\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login } from \"../store/user.jsx\";\nconst Login = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { role, idUser } = useSelector((state) => state.user);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorEmail, setErrorEmail] = useState(false);\n  const [errorPassword, setErrorPassword] = useState(false);\n  const [errorEmailDetail, setErrorEmailDetail] = useState(\"\"); // nội dung lỗi email nếu có\n  const [errorPasswordDetail, setErrorPasswordDetail] = useState(\"\"); // nội dung lỗi password\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value);\n    setErrorEmail(false);\n    setErrorEmailDetail(\"\");\n  };\n\n  const onChangePassword = (e) => {\n    setPassword(e.target.value);\n    setErrorPassword(false);\n    setErrorPasswordDetail(\"\");\n  };\n  useEffect(() => {\n    // Redirect after role and idUser are available\n    if (role && idUser) {\n      let destination = \"/personal-page\"; // Default destination\n\n      if (role === \"admin 1\" || role === \"admin 2\") {\n        destination = \"/admin/dashboard\";\n      }\n      if (role === \"partner\") {\n        destination = \"/partner/personal-page\";\n      }\n\n      navigate(destination, { state: { personalPageId: idUser } }); // Perform the navigation\n    }\n  }, [role, idUser, navigate]);\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    const rememberMe = data.get(\"remember\") === \"on\"; // Get remember me value\n    data.append(\"rememberMe\", rememberMe); //Append the rememberMe to the request, so the back-end could see it.\n\n    const response = await UserAPI.postSignIn(data); // MỚI THÊM\n    console.log(\"This is response\", response);\n\n    if (response && response.success === false) {\n      const err = response.errors;\n      setErrorEmail(false);\n      setErrorPassword(false);\n      setErrorEmailDetail(\"\");\n      setErrorPasswordDetail(\"\");\n\n      if (err.path === \"email\") {\n        setErrorEmail(true);\n        setErrorEmailDetail(err.msg);\n      }\n      if (err.path === \"password\") {\n        setErrorPassword(true);\n        setErrorPasswordDetail(err.msg);\n      }\n    } else if (response && response.success === true) {\n      const { user, accessToken, refreshToken } = response;\n      console.log(\"ressponse\", user);\n      // Store tokens based on \"Remember Me\" selection\n      if (rememberMe) {\n        localStorage.setItem(\"accessToken\", accessToken);\n        localStorage.setItem(\"refreshToken\", refreshToken);\n      } else {\n        sessionStorage.setItem(\"accessToken\", accessToken);\n        sessionStorage.setItem(\"refreshToken\", refreshToken);\n      }\n\n      dispatch(\n        login({\n          idUser: user._id,\n          username: user.username || user.organizationName,\n          role: user.role,\n          avatar: user.avatar || null,\n          background: user.background || null,\n        })\n      );\n    } else if (\n      response &&\n      (response.status === 500 || response.status === 404)\n    ) {\n      // Chuyển hướng đến trang lỗi\n      navigate(\"/error-page\", {\n        state: { status: response.status, message: response.errors },\n      });\n    }\n  };\n  return (\n    <div className=\"auth-wrapper\">\n      <div className=\"auth-inner\">\n        <form method=\"POST\" onSubmit={submitHandler}>\n          <h3>Sign In</h3>\n          <div className=\"mb-3\">\n            <label>\n              Email <sup className=\"text-danger\">*</sup>\n            </label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              className=\"form-control\"\n              value={email}\n              onChange={onChangeEmail}\n              placeholder=\"Enter email\"\n              required\n            />\n            {errorEmail && (\n              <p style={{ color: \"red\", fontSize: \"12px\" }}>\n                {errorEmailDetail}\n              </p>\n            )}\n          </div>\n          <div className=\"mb-3\">\n            <label>\n              Mật khẩu <sup className=\"text-danger\">*</sup>\n            </label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              className=\"form-control\"\n              value={password}\n              onChange={onChangePassword}\n              placeholder=\"Enter password\"\n              required\n            />\n            {errorPassword && (\n              <p style={{ color: \"red\", fontSize: \"12px\" }}>\n                {errorPasswordDetail}\n              </p>\n            )}\n          </div>\n          <div className=\"mb-3\">\n            <div className=\"custom-control custom-checkbox\">\n              <input\n                type=\"checkbox\"\n                className=\"custom-control-input me-1\"\n                id=\"customCheck1\"\n                name=\"remember\"\n              />\n              <label className=\"custom-control-label\" htmlFor=\"customCheck1\">\n                Ghi nhớ\n              </label>\n            </div>\n          </div>\n          <div className=\"d-grid\">\n            <button type=\"submit\" className=\"btn btn-success\">\n              Đăng nhập\n            </button>\n          </div>\n          <p className=\"forgot-password text-right\">\n            Quên <Link to=\"/forgot-password\">mật khẩu?</Link>\n          </p>\n        </form>\n      </div>\n    </div>\n  );\n};\nexport default Login;\n"],"names":["Login","dispatch","useDispatch","navigate","useNavigate","role","idUser","useSelector","state","user","email","setEmail","useState","password","setPassword","errorEmail","setErrorEmail","errorPassword","setErrorPassword","errorEmailDetail","setErrorEmailDetail","errorPasswordDetail","setErrorPasswordDetail","useEffect","destination","personalPageId","_jsx","className","children","_jsxs","method","onSubmit","async","e","preventDefault","data","FormData","target","rememberMe","get","append","response","UserAPI","postSignIn","console","log","success","err","errors","path","msg","accessToken","refreshToken","localStorage","setItem","sessionStorage","login","_id","username","organizationName","avatar","background","status","message","type","name","value","onChange","placeholder","required","style","color","fontSize","id","htmlFor","Link","to"],"sourceRoot":""}